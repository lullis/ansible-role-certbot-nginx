---
- name: create DH Parameter file
  tags: openssl, security, keygen
  command: "openssl dhparam -out {{ certbot_nginx_ssl_dhparam_file_location }} {{ certbot_nginx_ssl_dhparam_key_size }}"
  args:
    creates: "{{ certbot_nginx_ssl_dhparam_file_location }}"

- name: install ca-certificates
  tags: ca
  apt:
    name: ca-certificates
    state: present

- name: install ssl parameters snippet file
  tags: certbot, nginx
  template:
    src: etc/nginx/snippets/ssl_params.conf.j2
    dest: "{{ certbot_nginx_snippet_ssl_params_path }}"
  notify:
    - reload nginx


- name: install certbot ssl certificates snippet file
  tags: certbot, nginx
  template:
    src: etc/nginx/snippets/ssl_certificate_files.conf.j2
    dest: "{{ certbot_nginx_snippet_ssl_certificates_path }}"
  notify:
    - reload nginx

- name: install default site (redirect all http to https)
  tags: nginx, web, site
  template:
    src: etc/nginx/sites-available/redirect_ssl.j2
    dest: "/etc/nginx/sites-available/{{ certbot_nginx_ssl_site_name }}"
  notify:
    - reload nginx

- name: enable default site
  tags: nginx, web, systemd
  file:
    src: "/etc/nginx/sites-available/{{ certbot_nginx_ssl_site_name }}"
    dest: "/etc/nginx/sites-enabled/{{ certbot_nginx_ssl_site_name }}"
    state: link
  notify:
    - reload nginx

- name: reload nginx service with configuration (if needed)
  meta: flush_handlers

- name: install and setup nginx authenticator plugin
  include_tasks: setup_nginx_authenticator_plugin.yml
  when: certbot_nginx_http_challenge_enabled | bool

- name: install vhosts
  tags: nginx, web, hosts
  template:
    src: etc/nginx/sites-available/proxy_site.j2
    dest: "/etc/nginx/sites-available/{{ item.key }}"
  vars:
    - public_domain: "{{ item.key }}"
    - upstreams: "{{ item.value.upstreams }}"
    - locations: "{{ item.value.locations }}"
    - site_directives: "{{ item.value.site_directives | default('') }}"
  loop: "{{ certbot_nginx_ssl_sites|dict2items }}"
  notify:
    - reload nginx

- name: add vhosts to enabled sites
  tags: nginx, web, systemd, hosts
  file:
    src: "/etc/nginx/sites-available/{{ item.key }}"
    dest: "/etc/nginx/sites-enabled/{{ item.key }}"
    state: link
  loop: "{{ certbot_nginx_ssl_sites | dict2items }}"
  loop_control:
    label: "{{ item.key }}"
  notify:
    - reload nginx
